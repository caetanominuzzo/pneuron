<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="editorBaseButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk1+CQAAAAAAADYAAAAoAAAAHQAAABsAAAABABgAAAAAAAAAAADEDgAAxA4AAAAAAAAAAAAA////////
        8eLX6dfL5M3C4cm94cm94cm94cm94cm94cm94cm94cm94cm94cm94cm94cm94cm94cm94cm94cm94cm9
        4cm94cm95M3C6dfL8eLX////////AP///+7f1OTOw+va0PDi2vbs5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs
        5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs5Pbs5PDi2urZzuTNwu7f1P///wDx4tnlzsPw4dn4
        7eb47eb47eb47eb47eb47eb47eb47eb47eb47eb47ef47ef47ef47eb47eb47eb47eb47eb47eb47eb4
        7eb47eb47ebv39fkzcLx4tkA6tfM7d3U+fDq+e/o+e/o+e/o+e/o+e/o+e/o+e/p+fDp+fDq+fDq+vHr
        +vHr+vHr+fDq+fDq+fDp+e/p+e/o+e/o+e/o+e/o+e/o+e/o+e/o7NrR6tfMAOXPxPTq4/rx6frx6frx
        6frx6frx6frx6fry6vry6/vz7Pv07fv07vv17vv17vv17vv07vvz7fvz7Pry6/ry6vrx6frx6frx6frx
        6frx6frx6fTn3uXPxADky8D68+768en68en68en68en68en68ur68uv78+379e779u/89vL8+fb9+vf9
        +vj9+vf8+PT79e778+368uv68ur68en68en68en68en68en57+fky8AA5MrA/Pbw+/Lq+/Lq+/Lq+/Lq
        +/Pr+/Ps/PXu/Pbw/Pfy8+znz72yuJuKspJ/uZyK0r+09fDu/vz6/fj0/PTu+/Ps+/Pr+/Lq+/Lq+/Lq
        +/Lq+/Lq5MrAAOTMwvz28fvy6/vy6/vy6/vz7Pvz7fz07/z28Pz389PEu5JnT4ZRM4VRM4JQMoFQMoJQ
        MpdrUdvKwf79/P349vz07/vz7fvy7Pvy6/vy6/vy6/vy6+TMwgDlzML89/L78+z78+z78+z79O389e/8
        9vH8+PS/q56FUzeIUzaEUjV8TTJ2SzJ0STB2STB8TTKGUzjJsaT9/Pr9+PP79O779O378+z78+z78+z7
        8+zlzMIA5c7D/Pfy+/Ps+/Ps+/Tt+/Tu/Pbx/Pjz28/HgVE2ilY5iVc8rpKC3dPM6+Tf3dPMpYx+dEs1
        e000hlM34dTM/fr5+/Xv+/Tt+/Ps+/Ps+/Ps+/Ps5c7DAObOw/338vz07fz07fz17vz28P338v359Ylg
        SopYOo1ZO9bGvP36+P359/359v359/3698m6sXNKM31QN6mKeP369/z28Pz17vz07fz07fz07fz07ebO
        wwDmz8T99/P89O789O789e/89vL9+PTWycCCVDuRXD++oZD9+/n9+fb9+fT9+PT9+fT9+fb9+fe0npKc
        gG+/qp/99/P89vH89fD89O/89O789O789O7mz8QA59DG/fj0/PXv/PXv/Pbx/ffz/fn1uaSXh1k+lWFD
        7OPe/fr4/fn1/fj0/fjz/fj0/fn1/fr2/fr3/fr3/fr2/fj0/Pfz/Pbx/PXw/PXv/PXv/PXv59DGAOfR
        yP349fz18Pz18Pz28v349P359rCYiolcQp1rUPHq5/36+P359f339Pv28v349f36+f78+/78+/78+/78
        +/37+v369/z28vz28fz18Pz18Pz18OfRyADo0sn9+fX89vD89vD89/L9+PT9+vW7ppmJXUSbZ0ru5d/+
        /Pv9+vX9+fX9+fXHtaqpjHu5m4nAn43CoI3CoI3Ruav9/Pr8+PP89/H89vD89vD89vDo0skA6NLJ/fn1
        /Pbx/Pbx/Pfy/Pj0/fn22c3Fh15GmWhNyqya/v39/vv5/fr3/fr39/Lvl3VikGNJoG1Qp3FSqHJTvZZ/
        /fz7/fj0/Pfz/Pbx/Pbx/Pbx6NLJAOnTyv359v338v338v338/349P359v7795FtWZJlTaNxVOPRyP79
        /f78+/78+v78+/Xx7aqCaqdyVq12WK13WcGZg/78+/359v349P338/338v338unTygDp08v9+fb99/L9
        9/L99/P9+PT9+fX9+vfg1c2HX0iVaE6ldFjKqpfr39fy6+fq3tfJqpiselypdVemclWlclS+mIL+/Pz9
        +fb9+PT99/P99/L99/Lp08sA69XM/fr3/fjz/fjz/fjz/fj0/fn1/fr2/fv4xrSpimJKkmZNnW5SpXJU
        qHRXqHRWp3NWpXJUnnBToXtkkmZNtZJ+/v37/fr2/fn1/fjz/fjz/fjz69XMAOvVzf369/349P349P34
        9P349P359f359v369/37+djMw5V0YYthSpFlTZVpT5dpUJVpT6J8aN3PyPjz8Zx8aaiId/38+v359v35
        9f349P349P349OvVzQDr1s79+vf9+PT9+PT9+PT9+PT9+PX9+fX9+fb9+vf9+/j69vTd0svCr6S7pJjD
        r6Tf08369vT+/Pn++/n38+/BrKD9+fb9+fb9+fX9+PT9+PT9+PTr1s4A7NjQ/Pn2/fn2/fn1/fn1/fn1
        /fn1/fn1/fr2/fr3/fr3/fv4/fv5/fv5/fv5/fv5/fv5/fv5/fv4/fv4/fr3/fr3/fr2/fn2/fn1/fn1
        /fn1/Pfz7NjQAO7d1Pny7v369/359v359v359v359v359v359v359/369/369/36+P36+P36+P36+P36
        +P36+P369/369/369/369/359/359v359v359v359vnw7O7d1ADy49306OP9+vj9+vf9+fb9+fb9+fb9
        +fb9+fb9+fb9+fb9+ff9+ff9+vf9+vf9+vf9+ff9+ff9+ff9+fb9+fb9+fb9+fb9+fb9+fb9+fb9+fb0
        6OLy490A9+7o793W9u7p/fr4/fr3/fn3/fn2/fn2/fn2/fn2/fn2/fn2/fn2/fn2/fn2/fn2/fn2/fn2
        /fn2/fn2/fn2/fn2/fn2/fn2/fn2/fn39u3o793W9+7oAP////Xr5u/d1/Tp5Pny7v37+f37+f37+f37
        +f37+f37+f37+f37+f37+f37+f37+f37+f37+f37+f37+f37+f37+f37+f37+fny7vTp5O/d1/Xr5v//
        /wD////////37+ny5d/u39ft2tLt2tLt2tLt2tLt2tLt2tLt2tLt2tLt2tLt2tLt2tLt2tLt2tLt2tLt
        2tLt2tLt2tLt2tLt2tLu39fy5d/37+n///////8A
</value>
  </data>
</root>